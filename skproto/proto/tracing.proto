syntax = "proto3";

package tracing;

service SkyTracing {
    rpc PushMsgs(stream StreamReqData) returns (stream StreamResData) {}
    rpc PushSegments(stream SegmentData) returns (stream SegmentRes) {}
    rpc QuerySkySegments(SkyQueryParam) returns (SkySegmentRes) {}
}

message SkyQueryParam {
    string query = 1;
    int32 offset = 2;
    int32 limit = 3;
    repeated SegRange seg_range = 4;
}

message SegRange {
    int64 addr = 1;
}

message SkySegmentRes {
    repeated ScoreDoc score_doc = 1;
}

message ScoreDoc {
    float score = 1;
    bytes doc = 2;
}

message StreamReqData {
    string data = 1;
}

message StreamResData {
    string data = 1;
}

message SegmentData {
    Meta meta = 1;
    string trace_id = 2;
    string zone = 3;
    string ser_key = 4;
    int32 api_id = 5;
    string payload = 6;
    uint64 biz_timestamp = 7;
    string seg_id = 8;
}

message SegmentRes {
    Meta meta = 1;
    enum Code {
        ACK = 0;
    }
}

message Meta {
    int32 connId = 1;
    int64 seqId = 2;
    string source = 3;
    enum RequestType {
        HANDSHAKE = 0;
        TRANS = 1;
        TRANS_ACK = 2;
        CLIENT_SHUTDOWN = 3;
        SERVER_SHUTDOWN = 4;
    }
    uint64 send_timestamp= 4;
    RequestType type = 5;
}